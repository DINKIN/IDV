----------------------------------------------
RUNNING
----------------------------------------------

RAMADDA requires  Java 1.5 to run.

To run RAMADDA run the ramadda.sh

This just does:
   java -Xmx512m -jar repository.jar


RAMADDA creates a local storage directory in:
<home dir>/.unidata/repository

By default the server is on port 8080.  To change the port do:
    java -Xmx512m -jar repository.jar -port <some port>


By default RAMADDA uses a local Java Derby database. 
To run with mysql you do:
     java -Xmx512m -jar repository.jar -Dramadda.db=mysql


The mysql database and user/password is defined in the repository.properties 
file. To change it make a repository.properties file with the following 
3 lines and put it in <home dir>/.unidata/repository

ramadda.db.mysql.url=jdbc:mysql://localhost:3306/repository?zeroDateTimeBehavior=convertToNull
ramadda.db.mysql.user=the database user
ramadda.db.mysql.password=the database password

Or alteratively set the properties on the command line:
     java -Xmx512m -jar repository.jar -Dramadda.db=mysql -Dramadda.db.mysql.url=jdbc:mysql://localhost:3306/repository?zeroDateTimeBehavior=convertToNull -Dramadda.db.mysql.user=the database user -Dramadda.db.mysql.password=the database password



----------------------------------------------
BUILDING
----------------------------------------------
The  source release creates, at the top level, the ucar source tree and a lib directory. 
The lib directory has two jar files:
lib/repositorylib.jar
lib/repositorytds.jar

To compile stand-alone (e.g., using javac) put those 2 jar files in your class path.

To compile using ant:
The default ant target  (all) will compile the repository source and create:
lib/repository.jar
lib/repository.war


You can run the repository stand-alone by doing:
java -jar repository.jar

All of the services except OpenDAP are available stand-alone.

The repository.war is a tomcat war file that needs to be placed in the tomcat install area.











